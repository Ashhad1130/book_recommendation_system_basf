# docker-compose.yml
services:
  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=bookrec
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d bookrec"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10

  app:
    build: .
    command: >
      sh -c "echo 'Waiting for database...' &&
             sleep 10 &&
             poetry run alembic upgrade head &&
             poetry run uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"
    volumes:
      - .:/app
      - ./data:/app/data
    ports:
      - "8000:8000"
    environment:
      - DB_TYPE=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=secret
      - POSTGRES_SERVER=db
      - POSTGRES_DB=bookrec
      - SECRET_KEY=your-super-secret-jwt-key-change-in-production
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - db
      - redis

  worker:
    build: .
    command: >
      sh -c "echo 'Waiting for services...' &&
             sleep 15 &&
             poetry run celery -A app.tasks.celery_app.celery worker --loglevel=info"
    volumes:
      - .:/app
      - ./data:/app/data
    environment:
      - DB_TYPE=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=secret
      - POSTGRES_SERVER=db
      - POSTGRES_DB=bookrec
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis
      - db

volumes:
  postgres_data: